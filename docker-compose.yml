version: "3"
services:
  postgres:
    image: library/postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  api_gateway:
    build: services
    container_name: api_gateway
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./services/api_gateway:/var/www/html
    command: bash -c "composer install --ignore-platform-reqs && apache2-foreground"


  app_service:
    build: services
    container_name: app_service
    restart: always
    ports:
      - "8070:80"
    depends_on:
      - postgres
      - identity_provider
    volumes:
      - ./services/app_service:/var/www/html
    command: bash -c "composer install --ignore-platform-reqs && php instruments/load_jwks.php && apache2-foreground"

  identity_provider:
    build: services
    container_name: identity_provider
    restart: always
    ports:
      - "8040:80"
    depends_on:
      - postgres
    volumes:
      - ./services/identity_provider:/var/www/html
    command: bash -c "composer install && php jwksGenerator.php && apache2-foreground"

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

volumes:
  db-data: